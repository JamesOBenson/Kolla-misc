---
- name: Check interface Br0 has IP address
  shell: /sbin/ifconfig br0 | grep Bcast | wc -l
  tags: interface
  register: Br0_Bcast
  when:
    - ansible_os_family == "Debian"

- name: Check interface Br0 has IP address
  shell: /sbin/ifconfig br0 | grep broadcast | wc -l
  tags: interface
  register: Br0_Bcast
  when:
    - ansible_os_family == "RedHat"

- name: Delete IP in br0
  become: yes
  when:
    - ansible_os_family == "RedHat"
    - iface_veno0.stdout == '0'
  lineinfile:
    path: /etc/sysconfig/network-scripts/ifcfg-br0
    state: absent
    regexp: "{{ item }}"
  with_items:
      - '^IPADDR'
      - '^NETMASK'
      - '^GATEWAY'

- name: Bring up br0
  become: yes
  command: bash -c "ifdown br0 && ifup br0"
  when:
    - ansible_os_family == "RedHat"
    - iface_veno0.stdout == '0'


#- name: Backup interfaces file
#  become: yes
#  command: mv /etc/network/interfaces /etc/network/interfaces2.bck
#  when:
#    - ansible_os_family == "Debian"
#    - Br0_Bcast.stdout == '1'

#- name: Create a new interfaces file
#  become: yes
#  file:
#    path: /etc/network/interfaces
#    state: touch
#    mode: 0644
#    owner: root
#    group: root
#  when:
#    - ansible_os_family == "Debian"
#    - Br0_Bcast.stdout == '1'

- name: Inject code into new interfaces file (Removing Br0 IP Addr)
  become: yes
  ignore_errors: true
  when:
    - ansible_os_family == "Debian"
    - inventory_hostname not in groups['control']
  blockinfile:
    mode: 0644
    path: /etc/network/interfaces
    state: present
    block: |
        auto lo
        iface lo inet loopback
          dns-search maas
          dns-nameservers {{ DNS_NAMESERVER }}

        auto eno1
        iface eno1 inet static
           dns-nameservers {{ DNS_NAMESERVER }}
           address {{ ansible_eno1.ipv4.address }}
           netmask 255.255.255.0

        auto eno2
        iface eno2 inet manual

- name: Restart server
  become: yes
  when:
    - ansible_os_family == "Debian"
    - inventory_hostname not in groups['control']
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0
  ignore_errors: true

- name: Wait for server to restart
  local_action:
    module: wait_for
      host={{ inventory_hostname }}
      state=started
      port=22
      delay=1
      timeout=600
      connect_timeout=15
  when:
    - ansible_os_family == "Debian"
