---
- hosts: all
  user: ubuntu
  #become: yes
  gather_facts: True
  tasks:
  - set_fact:
      interface_path: "/etc/network/interfaces"
      new_interface_path: "/etc/network/interfaces.bck"
      eno1_addr: ansible_eno1.ipv4.address
      br0_addr: ansible_br0.ipv4.address
  - debug:
      msg: "IP ADDR: {{ ansible_eno1.ipv4.address }} HOSTNAME: {{ inventory_hostname }}"

  - name: Make sure internal IPv4 and hostname is in etc/hosts
    lineinfile:
      line: "{{ ansible_eno1.ipv4.address }} {{ inventory_hostname }}"
      path: /etc/hosts
      state: present
      owner: root
      group: root
      mode: 0644
    become: yes
#    become_method: sudo
    async: 60
    poll: 5

  - name: Allow root to SSH
    command: cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/authorized_keys
    become: yes

  - name: Backup interfaces file
    command: mv "{{ interface_path }}" "{{ interface_path }}".bck
    become: yes

  - name: Create a new file
    become: yes
    file:
      path: "{{ interface_path }}"
      state: touch
      mode: 0644
      owner: root
      group: root

  - name: new interfaces file
    become: yes
    blockinfile:
      mode: 0644
      path: "{{ interface_path }}"
      state: present
      block: |
        auto lo
        iface lo inet loopback
          dns-search maas
          dns-nameservers 10.245.0.10

        auto eno1
        iface eno1 inet static
           dns-nameservers 10.245.0.10
           address {{ ansible_eno1.ipv4.address }}
           netmask 255.255.255.0

        auto eno2
        auto br0
        iface br0 inet static
           pre-up ip link add veno0 type veth peer name veno1
           pre-up ifconfig veno0 up
           pre-up ifconfig veno1 up
           bridge_ports eno2 veno0
           bridge_fd 0
           bridge_maxwait 0
           address {{ ansible_br0.ipv4.address }}
           netmask 255.255.255.0
           gateway 10.245.122.253
           up route add -net 10.245.122.0 netmask 255.255.255.0 gw 10.245.122.253 br0


#  - name: Get contents of interface file...
#    command: cat "{{ interface_path }}"
#    register: newinterface

#  - name: Print contents of Interface file
#    debug:
#      msg: "{{ newinterface.split('\n') }}"

  - name: Setup sdb drive for storage
    shell: sudo parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1
    become_method: sudo
    ignore_errors: true

  - name: Restart server
    shell: sleep 2 && shutdown -r now
    async: 1
    poll: 0
    become: yes
    become_method: sudo
    ignore_errors: true

# wait 300 seconds for port 22 to become open and contain "OpenSSH", don't assume the inventory_hostname is resolvable
# and don't start checking for 10 seconds
#  - local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10
  - name: Wait for server to restart
    local_action:
      module: wait_for
        host={{ inventory_hostname }}
        state=started
        port=22
        delay=1
        timeout=600
        connect_timeout=15
