---
- hosts: all
  user: ubuntu
  #become: yes
  gather_facts: True
  tasks:
  - set_fact:
      interface_path: "/etc/network/interfaces"
      eno1_addr: ansible_eno1.ipv4.address
      br0_addr: ansible_br0.ipv4.address
      veno0: sbin/ifconfig | grep veno0 | wc -l
      CIDR: "10.245.122."
    tags: interface
  - debug:
      msg: "IP ADDR: {{ ansible_eno1.ipv4.address }} HOSTNAME: {{ inventory_hostname }}"
    tags: interface
  - debug:
      msg: "veno0 is {{ veno0 }}"
    tags: interface
  - name: Fix timezone issue
    command: sudo timedatectl set-timezone America/Chicago
    become: yes
    tags: time


#command: sudo ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
#$ sudo dpkg-reconfigure --frontend noninteractive tzdata
  - name: Uninstall LXD and LXC
    apt:
     name: "{item }"
     state: absent
    with_items:
      - lxd
      - lxc
    tags: oneTime1

  - name: Make sure internal IPv4 and hostname is in etc/hosts
    lineinfile:
      line: "{{ ansible_eno1.ipv4.address }} {{ inventory_hostname }}"
      path: /etc/hosts
      state: present
      owner: root
      group: root
      mode: 0644
    become: yes
#    become_method: sudo
    async: 60
    poll: 5
    tags: oneTime

  - name: Allow root to SSH
    command: cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/authorized_keys
    become: yes
    tags: oneTime

  - name: Check interface veno0 exists
    shell: /sbin/ifconfig | grep veno0 | wc -l
    tags: interface
    register: iface_veno0

  - debug:
      msg: "veno0 is {{ iface_veno0.stdout }}"
    tags: interface

  - name: Backup interfaces file
    command: mv /etc/network/interfaces /etc/network/interfaces.bck
    become: yes
    tags: interface
    when: iface_veno0.stdout == '0'

  - name: Create a new file
    become: yes
    file:
      path: /etc/network/interfaces
      state: touch
      mode: 0644
      owner: root
      group: root
    tags: interface
    #when: veno0 is undefined
    when: iface_veno0.stdout == '0'
     
  - name: new interfaces file
    become: yes
    tags: interface
    ignore_errors: true
    #when: veno0 is undefined
    when: iface_veno0.stdout == '0'
    blockinfile:
      mode: 0644
      path: /etc/network/interfaces
      state: present
      block: |
        auto lo
        iface lo inet loopback
          dns-search maas
          dns-nameservers 10.245.0.10

        auto eno1
        iface eno1 inet static
           dns-nameservers 10.245.0.10
           address {{ ansible_eno1.ipv4.address }}
           netmask 255.255.255.0

        auto eno2
        auto br0
        iface br0 inet static
           pre-up ip link add veno0 type veth peer name veno1
           pre-up ifconfig veno0 up
           pre-up ifconfig veno1 up
           bridge_ports eno2 veno0
           bridge_fd 0
           bridge_maxwait 0
           address {{ CIDR }}{{ ansible_eno1.ipv4.address.split('.')[3] }}
           netmask 255.255.255.0
           gateway 10.245.122.253
           up route add -net 10.245.122.0 netmask 255.255.255.0 gw 10.245.122.253 br0

#  - name: Get contents of interface file...
#    command: cat "{{ interface_path }}"
#    register: newinterface

#  - name: Print contents of Interface file
#    debug:
#      msg: "{{ newinterface.split('\n') }}"

#  - name: Bring down and up the network
#    service:
#      name: network
#      state: restarted
#    async: 60
#    poll: 5
#    tags: interface

#  - name: Bring down and up the network
#    become: yes
#    shell: "ifdown -a && ifup -a"
#    async: 60
#    poll: 1
#    ignore_errors: true
#    tags: interface

#  - name: Wait for networking to restart
#    tags: interface
#    local_action:
#      module: wait_for
#        host={{ inventory_hostname }}
#        state=started
#        port=22
#        delay=1
#        timeout=60
#        connect_timeout=15

  - name: umount CEPH partitions
    shell: sudo umount $(mount -v | grep sdb1 | awk '{print $3}')
    ignore_errors: true
    tags: ceph
    become: yes
    become_method: sudo

  - name: Delete partions
    shell: sudo sgdisk --zap-all /dev/sdb
    ignore_errors: true
    become_method: sudo
    become: yes
    tags: ceph 

  - shell: sudo sgdisk --new=2:1M:5G /dev/sdb
    become_method: sudo
    become: yes
    tags: ceph2
  - shell: sudo sgdisk --largest-new=1 /dev/sdb
    become_method: sudo
    become: yes
    tags: ceph2

  - name: Setup sdb drive for storage
    shell: sudo sgdisk --largest-new=1 -c 1:"KOLLA_CEPH_OSD_BOOTSTRAP" /dev/sdb
    #shell: sudo sgdisk -n 1:1049:-1 -c 1:"KOLLA_CEPH_OSD_BOOTSTRAP" /dev/sdb
    #shell: sudo parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1
    tags: ceph
    become: yes
    become_method: sudo
    ignore_errors: true

  - shell: partprobe || true
    become_method: sudo
    become: yes
    tags: ceph
    async: 45
    poll: 1


#  - shell: sudo sgdisk -c 2:"KOLLA_CEPH_DATA_{{ item }}_J" -c 1:"KOLLA_CEPH_DATA" -t 2:f800 -t 1:f802 /dev/sdb
#    become_method: sudo
#    become: yes
#    with_sequence: count=3
#    tags: ceph

  - name: Restart server
    shell: sleep 2 && shutdown -r now
    async: 1
    poll: 0
    tags: reboot,ceph,interface
    become: yes
    become_method: sudo
    ignore_errors: true

# wait 300 seconds for port 22 to become open and contain "OpenSSH", don't assume the inventory_hostname is resolvable
# and don't start checking for 10 seconds
#  - local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10
  - name: Wait for server to restart
    tags: reboot,interface,ceph
    local_action:
      module: wait_for
        host={{ inventory_hostname }}
        state=started
        port=22
        delay=1
        timeout=600
        connect_timeout=15
